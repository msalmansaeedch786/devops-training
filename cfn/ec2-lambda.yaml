# Salman Saeed

AWSTemplateFormatVersion: "2010-09-09"
Description: "A sample template to run an ec2 instance, assign role to ec2 instance, make a lambda function, assign role to lambda function, create sns topic and subscribe lambda to it."

Resources:
  ec2Role:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: "ec2-role"
      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          - 
            Effect: "Allow"
            Action: 
              - "sts:AssumeRole"
            Principal: 
              Service: 
                - "ec2.amazonaws.com"
      Policies:
        - PolicyName: CloudwatchAccess
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - "cloudwatch:PutMetricData"
                  - "cloudwatch:GetMetricStatistics"
                  - "cloudwatch:ListMetrics"
                  - "ec2:DescribeTags"
                Resource: "*"

  instanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: "/"
      Roles: 
        - Ref: ec2Role

  ec2Instance: 
    Type: AWS::EC2::Instance
    Properties: 
      ImageId: "ami-0b69ea66ff7391e80"
      InstanceType: t2.micro
      IamInstanceProfile: !Ref instanceProfile
      KeyName: DevOps-Training

  lambdaRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: "lambda-role"
      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          - Effect: "Allow"
            Action: 
              - "sts:AssumeRole"
            Principal: 
              Service: 
                - "lambda.amazonaws.com"
      Policies:
        - PolicyName: CloudwatchLogsAccess
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource: "*"
        - PolicyName: SESAccess
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - 'ses:SendEmail'
                Resource: "*"

  lambdaFunction:
    Type: "AWS::Lambda::Function"
    Properties:
        Code:
          S3Bucket: "devops-training-iam-cfn-cw-practice"
          S3Key: "lambda_function.zip"
        FunctionName: "lambda-cw-ses"
        Handler: "lambda_function.lambda_handler"
        MemorySize: 128
        Role: !GetAtt lambdaRole.Arn
        Runtime: "python3.7"
        Timeout: 3
        TracingConfig:
          Mode: "PassThrough"

  SNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: "devops-training-topic"
  
  LambdaSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint: !GetAtt lambdaFunction.Arn
      Protocol: lambda
      TopicArn: !Ref 'SNSTopic'